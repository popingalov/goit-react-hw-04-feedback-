{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","key","type","className","s","item","onClick","Statistics","bad","neutral","good","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","setTotal","useEffect","e","Math","round","root","document","querySelector","ReactDOM","render","StrictMode","module","exports"],"mappings":"6NAEe,SAASA,EAAT,GAA4C,IAAD,IAAxBC,aAAwB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,SAC5C,OACE,gCACGD,GAAS,6BAAKA,IACdC,K,oBCsBQC,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAG,OACd,wBAEEC,KAAK,SACLC,UAAWC,IAAEC,KACbC,QAAS,WACPP,EAAgBE,IALpB,SAQGA,GAPIA,SCPA,SAASM,EAAT,GAMX,IALFC,EAKC,EALDA,IACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,KAGC,IAFDC,aAEC,MAFO,EAEP,MADDC,0BACC,MADoB,EACpB,EACD,OACE,gCACE,qCAAQJ,KACR,sCAASE,KACT,yCAAYD,KACZ,wCAAWE,KACX,oDAAuBC,EAAvB,UCfS,SAASC,EAAT,GAAyC,IAAD,IAAhBC,eAAgB,MAAN,GAAM,EACrD,OAAO,8BAAMA,ICsDAC,MAjDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOR,EAAP,KAAYW,EAAZ,KACA,EAA0BH,mBAAS,GAAnC,mBAAOL,EAAP,KAAcS,EAAd,KAoBA,OARAC,qBAAU,WACRD,EAASV,EAAOD,EAAUD,KACzB,CAACE,EAAMD,EAASD,IAOjB,gCACE,cAACd,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAxBY,SAAAG,GACL,SAATA,GACFe,GAAQ,SAAAK,GAAC,OAAIA,EAAI,KAEN,YAATpB,GACFgB,GAAW,SAAAI,GAAC,OAAIA,EAAI,KAET,QAATpB,GACFiB,GAAO,SAAAG,GAAC,OAAIA,EAAI,UAmBhB,cAAC5B,EAAD,CAASC,MAAM,aAAf,SACGgB,EAAQ,EACP,cAACJ,EAAD,CACEG,KAAMA,EACND,QAASA,EACTD,IAAKA,EACLG,MAAOA,EACPC,mBAlBDD,EAAQ,EAAIY,KAAKC,MAAOd,EAAOC,EAAS,KAAO,IAqBhD,cAACE,EAAD,CAAcC,QAAQ,4BC3C1BW,G,YAAOC,SAASC,cAAc,UAEpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,I,kBCVFM,EAAOC,QAAU,CAAC,KAAO,iC","file":"static/js/main.3634b0a5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Section({ title = '', children }) {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(key => (\n        <button\n          key={key}\n          type=\"button\"\n          className={s.item}\n          onClick={() => {\n            onLeaveFeedback(key);\n          }}\n        >\n          {key}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nexport default function Statistics({\n  bad,\n  neutral,\n  good,\n  total = 0,\n  positivePercentage = 0,\n}) {\n  return (\n    <div>\n      <p>Bad:{bad}</p>\n      <p>Good:{good}</p>\n      <p>Neutral:{neutral}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  bad: PropTypes.number.isRequired,\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number,\n  total: PropTypes.number,\n};\n","export default function Notification({ message = '' }) {\n  return <div>{message}</div>;\n}\n","import { useState, useEffect } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const addFeedback = type => {\n    if (type === 'good') {\n      setGood(e => e + 1);\n    }\n    if (type === 'neutral') {\n      setNeutral(e => e + 1);\n    }\n    if (type === 'bad') {\n      setBad(e => e + 1);\n    }\n  };\n  useEffect(() => {\n    setTotal(good + neutral + bad);\n  }, [good, neutral, bad]);\n\n  const countPositiveFeedbackPercentage = () => {\n    return total > 0 ? Math.round((good / total) * 100) : 0;\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={addFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          ></Statistics>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport react from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <react.StrictMode>\n    <App />\n  </react.StrictMode>,\n  root,\n);\n/* function testXor(numbers) {\n  return numbers.reduce((acc, e) => {\n    console.log(acc, e);\n    return acc ^ e;\n  });\n}\nconst test = [1, 1, 2, 2, 8, 7, 3, 3, 4, 4];\nconsole.log(testXor(test)); */\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FeedbackOptions_item__23m18\"};"],"sourceRoot":""}